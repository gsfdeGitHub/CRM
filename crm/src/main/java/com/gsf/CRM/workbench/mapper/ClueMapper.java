package com.gsf.CRM.workbench.mapper;

import com.gsf.CRM.workbench.pojo.Clue;

import java.util.List;
import java.util.Map;

public interface ClueMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated
     */
    int insert(Clue row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated
     */
    int insertSelective(Clue row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated
     */
    Clue selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(Clue row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(Clue row);


    /**
     * 根据查询条件查询线索
     * @param map   控制层封装的查询条件
     * @return  返回存储了线索的List集合
     */
    List<Clue> selectClueByConditionForPage(Map<String,Object> map);

    /**
     * 根据条件查询线索记录条数
     * @param map   控制层封装的查询条件
     * @return  返回存储了线索的List集合
     */
    int selectClueCountByConditionForPage(Map<String,Object> map);

    /**
     * 插入一条线索
     * @param clue  控制层封装好的clue实体类
     * @return  返回受影响的记录条数
     */
    int insertCreateClue(Clue clue);

    /**
     * 根据id删除线索
     * @param id    控制层封装的一个存储String类型的id 的数组
     * @return  返回受影响的记录条数
     */
    int deleteClueById(String[] id);

    /**
     * 点击修改线索按钮，根据id查询线索
     * @param id    前端过来的id值
     * @return      返回一个Clue实体类对象
     */
    Clue selectClueById(String id);

    /**
     * 根据id修改线索
     * @param clue  控制层将前端传递过来的数据进行了封装
     * @return      返回受影响的记录条数
     */
    int updateClueById(Clue clue);

    /**
     * 跳转明细页面，查询线索的信息
     * @param id    用户选择的那个线索的id
     * @return      返回线索对象
     */
    Clue selectClueForDetailById(String id);
}